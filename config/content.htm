<h1>About</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">組員:</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">(1)學號:40923115 帳號:</span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">jason60714 ip: <a href="http://[2001:288:6004:17:2023:cdb:5:1]:23020/">[2001:288:6004:17:2023:cdb:5:1]:23020</a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span>(2)學號:40923130 帳號:Martin3130 <a href="http://[2001:288:6004:17:2023:cdb:5:2]:23020/">[2001:288:6004:17:2023:cdb:5:2]:23020</a></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">(3)<span>學號:</span>40923235 <span>帳號:</span>40923235  <a href="http://[2001:288:6004:17:2023:cdb:5:3]:23020/">[2001:288:6004:17:2023:cdb:5:3]:23020</a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">(4)<span>學號:</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023202 <span>帳號:</span>ting0111 <a href="http://[2001:288:6004:17:2023:cdb:5:4]:23020/">[2001:288:6004:17:2023:cdb:5:4]:23020/</a><br/></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">(5)<span>學號:</span>41023212 <span>帳號:</span>youqui0411<a href="http://[2001:288:6004:17:2023:cdb:5:5]:23020/">[2001:288:6004:17:2023:cdb:5:5]:23020</a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">(6)<span>學號:</span>41023229 <span>帳號:</span>CHI1020    <a href="http://[2001:288:6004:17:2023:cdb:5:6]:23020/">[2001:288:6004:17:2023:cdb:5:6]:23020</a></span></span></p>
<p>(7)<span>學號:</span>41023242 <span>帳號:</span>41023242  <a href="http://[2001:288:6004:17:2023:cdb:5:7]:23020/"> [2001:288:6004:17:2023:cdb:5:7]:23020</a></p>
<p>組長:</p>
<p>(8)<span>學號:</span>41023252 <span>帳號:</span>ZYC0923    <a href="http://[2001:288:6004:17:2023:cdb:5:8]:23020/">[2001:288:6004:17:2023:cdb:5:8]:23020</a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">倉儲:</span></span></p>
<p>      <span> <a href="https://github.com/mdecd2023/2b3-pj3bg5">https://github.com/mdecd2023/2b3-pj3bg5</a></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">網站：</span></span></p>
<p>       <span><a href="https://mdecd2023.github.io/2b3-pj3bg5/content/index.html">https://mdecd2023.github.io/2b3-pj3bg5/content/index.html</a><a href="https://mdecd2023.github.io/2b3-pj3bg5/content/index.html"></a></span></p>
<p><span></span></p>
<p><span> </span></p>
<h1>網站更新步驟</h1>
<p>1.個人的 fork 倉儲點選 Sync fork</p>
<p>2.打開資料夾</p>
<p>3.點選 start_ipv6.bat</p>
<p>4.輸入 cd 資料夾名稱 並且 git pull</p>
<p>5.cms</p>
<p>6.貼上網址進行動態網頁編輯</p>
<p>7.acp</p>
<p>8.點選個人 fork 倉儲 Open pull request</p>
<p>9.回到整組倉儲 merge pull request</p>
<p><span> </span></p>
<h1>group</h1>
<p></p>
<p><button id="add1to100">亂數</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023242/ae8d10daf540e1640cfbc32f1114e871/raw/501e3ad784fd19222e98c3b3705e748bfdab2cec/mmmm"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- 亂數 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/41023242/e9a398ddf001f2422be93e06ca89638d/raw/6cfafceb8155ca8f8c1e87f568aa92e3d3bb1763/ggg"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "亂數" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- 亂數 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p></p>
<h1>場地</h1>
<p><a href="/downloads/場景.STL">場地</a></p>
<p><img alt="" height="465" src="/images/場地.png" width="886"/></p>
<p><a href="/downloads/場地(有感應線.zip">場地(有感應線.zip</a></p>
<p></p>
<p><a href="/downloads/v1.7z">第一版(8台wali)</a></p>
<p></p>
<p><img alt="" height="398" src="/images/v1.png" width="800"/></p>
<p><a href="/downloads/v2.7z">第二版(4台bubbleRob、4台wali)</a></p>
<p>由於8台wali會造成延遲，所以將4台改為bubbleRob。</p>
<p><img alt="" height="380" src="/images/v2.png" width="800"/></p>
<p></p>
<p>場景(修改)</p>
<p><img alt="" height="487" src="/images/場景.png" width="660"/></p>
<p></p>
<p><img alt="" height="445" src="/images/場景2.png" width="580"/></p>
<p><img alt="" height="410" src="/images/666.png" width="500"/></p>
<p><a href="/downloads/pj3場景.7z">PJ3場景</a></p>
<p><a href="/downloads/pj3-6.zip">最新完整版</a></p>
<p><a href="/downloads/控制碼.zip">控制碼</a></p>
<h1>進球顯示背號</h1>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/RqjqFnNErK8" width="500"></iframe></p>
<p><a href="https://cad.onshape.com/documents/d5cb45e508a1134c61930b46/w/eeda24b42c0ba5120059f454/e/0655321dc9bfcf5524b7964e?renderMode=0&amp;uiState=6489d21414c0c379ad6e613d">背號版</a></p>
<h1>記分板</h1>
<p><a href="https://cad.onshape.com/documents/6d82b4ac2cc993a661a08e48/w/4d4f2ab6e5b72b3eddbbabc5/e/370766153f115ef4cb5b5848">第一代記分板onshape</a></p>
<p><img alt="" height="281" src="/images/記分板第一代.png" width="500"/></p>
<p><img alt="" height="281" src="/images/記分板1.png" width="500"/></p>
<p><img alt="" height="281" src="/images/2222.png" width="500"/></p>
<p><a href="/downloads/我畫的記分板.zip">第二代solidworks(未組裝)</a></p>
<p><a href="https://cad.onshape.com/documents/58835cf77caa3b21bd39a2e6/w/f5fa781f819b27bab5a8e05a/e/933be698e778b06650ecd734">第三代記分板onshape</a>(組裝)</p>
<p><img alt="" height="430" src="/images/878.png" width="500"/></p>
<p><img alt="" height="409" src="/images/787.png" width="500"/></p>
<h1>機器人</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023202</span></span></p>
<p><a href="/downloads/機器人零件.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023202組合</span></span></a></p>
<p><img alt="" height="525" src="/images/機器人41023202.png" width="500"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023212</span></span></p>
<p><a href="/downloads/41023212組合.zip"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023212組合.zip</span></span></a></p>
<p><img alt="" height="281" src="/images/41023212組合.png" width="500"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023229</span></span></p>
<p><a href="https://cad.onshape.com/documents/0b8195cc6bc1c3bae3b90707/w/a60ef69c5b8339040c3fb74b/e/bf95412bef9fc63cd5d56658"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023229機械人</span></span></a></p>
<p><img alt="" src="/images/11111.png" width="500"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023242</span></span></p>
<p><a href="https://cad.onshape.com/documents/95513db0f20db5909c050908/w/3ddb976bae597e1e52ba6974/e/0131fa98a6148f9902bfe2af?renderMode=0&amp;uiState=64776594f0ffd9296289d902"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023242機械人</span></span></a></p>
<p><img alt="" height="281" src="/images/機器人.png" width="500"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023252</span></span></p>
<p><a href="https://cad.onshape.com/documents/d6ca784313f56d73b9228c43/w/a33a9be1d59677d7e905cfa3/e/564927d6ba6a43d81126b871?renderMode=0&amp;uiState=64776babf0ffd9296289dfe5"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">41023252機械人</span></span></a></p>
<p><img alt="" height="282" src="/images/41023252.png" width="500"/></p>
<p>40923130</p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="/downloads/40923130機器人.7z">40923130機器人</a></span></span></p>
<p><img alt="" height="403" src="/images/球員.png" width="503"/></p>
<p>40923115</p>
<p><a href="/downloads/機器人檔案.zip" title="40923115 機器人">40923115 機器人</a></p>
<p><img alt="" height="405" src="/images/ok.png" width="501"/></p>
<p>40923235</p>
<p><a href="/downloads/40923235機器人.zip" title="40923235 機器人">40923235 機器人</a></p>
<p><img alt="" height="313" src="/images/機器人 2023-06-01 142027.png" width="495"/></p>
<p></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">機器人影片</span></span></p>
<p><a href="/downloads/wali.7z">瓦利機器人</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/TPXtui8DTdk" width="560"></iframe></p>
<h1>協同設計</h1>
<p><a href="/downloads/新球場 .stl">球場</a></p>
<p>影片</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 8,
  buttonFrameLength: 4,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/新球場.mp4" type="video/mp4"/></video></div>
<h2>分配工作</h2>
<p><span>40923115:使用solidworks繪製機器人本體，按照規格所要求的畫，研究latex，轉乘ppt，改良自己的機器人。</span></p>
<p>40923130:繪製自己的機器人，更改joint與輪子名稱，寫wali程式碼，改良BubbleRob，寫BubbleRob程式碼，尋找與修改記分板程式碼。</p>
<p>40923235:繪製自己的機器人，研究latex。</p>
<p>41023202:詢問許多同學步驟，首先先製作足球機器人。我是先用solidworks畫出機器人的本體，按照規格所要求的畫。之後再把檔案存成stl檔。接著畫出輪子(含輪框)、軸各為一份檔案。也是存成stl檔案。接著再畫出場地，按照尺寸設計以及需求，也是存成stl檔案。</p>
<p>41023212:負責畫出自己的機器人，並嘗試帶入計分器的程式，與別組已完成的同學討論，新增機器人背數</p>
<p>41023229:負責畫機器人和裝機器人的軸作動跟畫記分板，組裝記分板和製作分組報告。</p>
<p>41023242:負責主持會議、錄製影片、交代任務，尋找可能會發生哪些問題並盡快提早解決，畫機器人、畫記分板、組裝軸</p>
<p>41023252:負責畫出自己的機器人，將機器人裝上轉軸作動，解決cmd及網站倉儲問題，修改、測試記分板程式問題。</p>
<p></p>
<h2>會議記錄</h2>
<p>5/23開會目的:各自設計一個球員</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/zn2uJK3RXy8" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/pC7qJZ27Oq4" title="YouTube video player" width="560"></iframe></p>
<p>5/24開會目的:將設計好的球員加上輪子匯入CoppeliaSim嘗試</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/YiWoj-0h3D8" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/dU6igHDn9wQ" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/1Y7upHTy7Bg" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>5月31日:把各自的機器人做修改並上傳，我們把場地跟球框重畫了，之前是場地球框分開畫，現在我們畫在一起這樣在協同的過程中比較方便進行，最後有讓我們的機器人裝上軸並試著走走看<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/MDRZOEa35hU" title="YouTube video player" width="560"></iframe></p>
<h1>Wali程式碼</h1>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pip install pyzmq cbor keyboard
from zmqRemoteApi_IPv6 import RemoteAPIClient
#from zmqRemoteApi import RemoteAPIClient
import keyboard

#client = RemoteAPIClient('localhost', 23000)
client = RemoteAPIClient('2001:288:6004:17:2023:cdb:5:2', 23000)

print('Program started')
sim = client.getObject('sim')

sim.startSimulation()
print('Simulation started')

def setWaliRobVelocity(leftWheelVelocity, rightWheelVelocity):
    leftMotor1 = sim.getObject('/leftMotor1')
    leftMotor2 = sim.getObject('/leftMotor2')
    rightMotor1 = sim.getObject('/rightMotor1')
    rightMotor2 = sim.getObject('/rightMotor2')
    sim.setJointTargetVelocity(leftMotor1, leftWheelVelocity)
    sim.setJointTargetVelocity(leftMotor2, leftWheelVelocity)
    sim.setJointTargetVelocity(rightMotor1, rightWheelVelocity)
    sim.setJointTargetVelocity(rightMotor2, rightWheelVelocity)
    
'''
# Example usage 1:
setBubbleRobVelocity(1.0, 1.0)
time.sleep(2)
setBubbleRobVelocity(0.0, 0.0)
'''
# use keyborad to move BubbleRob

while True:
    if keyboard.is_pressed('5'):
        setWaliRobVelocity(3.0, 3.0)
    elif keyboard.is_pressed('8'):
        setWaliRobVelocity(-3.0, -3.0)
    elif keyboard.is_pressed('6'):
        setWaliRobVelocity(-3.0, 3.0)
    elif keyboard.is_pressed('4'):
        setWaliRobVelocity(3.0, -3.0)
    elif keyboard.is_pressed('q'):
        # stop simulation
        sim.stopSimulation()
    else:
        setWaliRobVelocity(0.0, 0.0)


</pre>
<p><br/><br/></p>
<p>利用紅綠球控制之程式碼修改成Wali的程式碼</p>
<p></p>
<p>第二版(降低操作延遲)</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pip install pyzmq cbor keyboard
from zmqRemoteApi_IPv6 import RemoteAPIClient
import keyboard
import time

#client = RemoteAPIClient('localhost', 23000)
client = RemoteAPIClient('2001:288:6004:17:2023:cdb:5:2', 23000)

print('Program started')
sim = client.getObject('sim')

sim.startSimulation()
print('Simulation started')

def setWaliRobVelocity(leftWheelVelocity, rightWheelVelocity):
    leftMotor1 = sim.getObject('/leftMotor1')
    leftMotor2 = sim.getObject('/leftMotor2')
    rightMotor1 = sim.getObject('/rightMotor1')
    rightMotor2 = sim.getObject('/rightMotor2')
    sim.setJointTargetVelocity(leftMotor1, leftWheelVelocity)
    sim.setJointTargetVelocity(leftMotor2, leftWheelVelocity)
    sim.setJointTargetVelocity(rightMotor1, rightWheelVelocity)
    sim.setJointTargetVelocity(rightMotor2, rightWheelVelocity)

# 使用非阻塞模式
keyboard.unhook_all()

# 設定時間間隔
interval = 0.05

# 初始化移動指令
leftWheelVelocity = 0.0
rightWheelVelocity = 0.0

while True:
    if keyboard.is_pressed('s'):
        leftWheelVelocity = 10.0
        rightWheelVelocity = 10.0
    elif keyboard.is_pressed('w'):
        leftWheelVelocity = -10.0
        rightWheelVelocity = -10.0
    elif keyboard.is_pressed('d'):
        leftWheelVelocity = -2.0
        rightWheelVelocity = 2.0
    elif keyboard.is_pressed('a'):
        leftWheelVelocity = 2.0
        rightWheelVelocity = -2.0
    elif keyboard.is_pressed('q'):
        # stop simulation
        sim.stopSimulation()
        break
    else:
        leftWheelVelocity = 0.0
        rightWheelVelocity = 0.0

    # 發送移動指令
    setWaliRobVelocity(leftWheelVelocity, rightWheelVelocity)

    #</pre>
<p></p>
<h1>4輪BubbleRob程式碼</h1>
<p></p>
<p>因為發現原有Wali機器人結構太複雜，放8隻機器人會導致操控上很延遲，所以將4隻改成PJ1和PJ2的BubbleRob改良成4個輪子，以下為程式碼</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pip install pyzmq cbor keyboard
from zmqRemoteApi_IPv6 import RemoteAPIClient
#from zmqRemoteApi import RemoteAPIClient
import keyboard
import time

#client = RemoteAPIClient('localhost', 23000)
client = RemoteAPIClient('2001:288:6004:17:2023:cdb:5:2', 23000)

print('Program started')
sim = client.getObject('sim')
sim.startSimulation()
print('Simulation started')

def setBubbleRobVelocity(leftWheelVelocity, rightWheelVelocity):
    leftMotor9 = sim.getObject('/leftMotor9')
    rightMotor9 = sim.getObject('/rightMotor9')
    leftMotor10 = sim.getObject('/leftMotor10')
    rightMotor10 = sim.getObject('/rightMotor10')
    sim.setJointTargetVelocity(leftMotor9, leftWheelVelocity)
    sim.setJointTargetVelocity(rightMotor9, rightWheelVelocity)
    sim.setJointTargetVelocity(leftMotor10, leftWheelVelocity)
    sim.setJointTargetVelocity(rightMotor10, rightWheelVelocity)
    
# 使用非阻塞模式
keyboard.unhook_all()

# 設定時間間隔
interval = 0.05

# 初始化移動指令
leftWheelVelocity = 0.0
rightWheelVelocity = 0.0

while True:
    if keyboard.is_pressed('up'):
        leftWheelVelocity = 10.0
        rightWheelVelocity = 10.0
    elif keyboard.is_pressed('down'):
        leftWheelVelocity = -10.0
        rightWheelVelocity = -10.0
    elif keyboard.is_pressed('right'):
        leftWheelVelocity = 10.0
        rightWheelVelocity = -10.0
    elif keyboard.is_pressed('left'):
        leftWheelVelocity = -10.0
        rightWheelVelocity = 10.0
    elif keyboard.is_pressed('q'):
        # stop simulation
        sim.stopSimulation()
        break
    else:
        leftWheelVelocity = 0.0
        rightWheelVelocity = 0.0

    # 發送移動指令
    setBubbleRobVelocity(leftWheelVelocity, rightWheelVelocity)

</pre>
<p></p>
<p></p>
<h1>記分板程式碼</h1>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    score = 0
    wheelJoint = sim.getObjectHandle('/joint1r')
    robot = {
        sim.getObjectHandle('/wali1'),
        sim.getObjectHandle('/wali2'),
        sim.getObjectHandle('/wali3'),
        sim.getObjectHandle('/wali4'),
        sim.getObjectHandle('/bubbleRob5'),
        sim.getObjectHandle('/bubbleRob6'),
        sim.getObjectHandle('/bubbleRob7'),
        sim.getObjectHandle('/bubbleRob8')
    }

    #給定機器人得分後復歸的位置
    initialPos = {
        {1.175, -1.12, 0.21},
        {1.175, -0.62, 0.21},
        {1.175, 0, 0.21},
        {1.175, 0.5, 0.21},
        {-1.050, 0.57479, 0.21},
        {-1.050, 0.1002, 0.21},
        {-1.050, -0.44968, 0.21},
        {-1.050, -0.97493, 0.21}
    }
  #給定機器人得分後的轉向  
    initialOri = {
        {0, 0, 0},
        {0, 0, 0},
        {0, 0, 0},
        {0, 0, 0},
        {0, 0, 0},
        {0, 0, 0},
        {0, 0, 0},
        {0, 0, 0}
    }
    displayHandles = {
        sim.getObjectHandle('/display1'),
        sim.getObjectHandle('/display2'),
        sim.getObjectHandle('/display3'),
        sim.getObjectHandle('/display4'),
        sim.getObjectHandle('/display5'),
        sim.getObjectHandle('/display6'),
        sim.getObjectHandle('/display7')
    }
    displayParameters = {
        {0, 0, 1, 0, 0, 1, 0},
        {1, 0, 1, 1, 1, 0, 1},
        {1, 0, 1, 1, 0, 1, 1},
        {0, 1, 1, 1, 0, 1, 0},
        {1, 1, 0, 1, 0, 1, 1},
        {1, 1, 0, 1, 1, 1, 1},
        {1, 0, 1, 0, 0, 1, 0},
        {1, 1, 1, 1, 1, 1, 1}
    }
    goalEffectEnabled = false
    lastGoalPlayer = nil
    flashingState = false
    flashingTimer = 0
    goalHandle = sim.getObjectHandle('/goal')
    flashingDuration = 0.5
    flashingTimer = 0 
    isFlashing = false
end

sensor = sim.getObject('./sensor')
initialPosBall = sim.getObjectPosition(sensor, -1)
ball = sim.getObject('/ball')

function sysCall_actuation()
    result = sim.readProximitySensor(sensor)
    if (result &gt; 0) then
        score = score + 1
        sim.setObjectPosition(ball, -1, {-0.15,-0.25,0.15})
        
        -- Rotate the wheel joint by 36 degrees
        local currentAngle = sim.getJointPosition( wheelJoint)
        local targetAngle = currentAngle + math.rad(-36)
        sim.setJointTargetPosition( wheelJoint, targetAngle)
        #對機器人5~8 針對場景坐標系(-1) 給定上面設定位置 
        for i = 5, 8 do
            sim.setObjectPosition(robot[i], -1, initialPos[i])
            sim.setObjectOrientation(robot[i], -1, initialOri[i])
        end
        #對機器人1~4 針對機器人坐標系( robot[i]) 給定上面設定位置
         for i = 1, 4 do
            sim.setObjectOrientation(robot[i], robot[i], initialOri[i])
        end
        
        goalEffectEnabled = true
        lastGoalPlayer = result
        flashingState = false
        flashingTimer = 0
    end
    
    if goalEffectEnabled then
        if not isFlashing then
            flashingTimer = flashingTimer + sim.getSimulationTimeStep()
            if flashingTimer &gt;= flashingDuration then
                isFlashing = true
                sim.setShapeColor(goalHandle, nil, sim.colorcomponent_ambient_diffuse, {1, 0.9, 0})
            end
        elseif isFlashing then
            flashingTimer = flashingTimer + sim.getSimulationTimeStep()
            if flashingTimer &gt;= flashingDuration + 3 then
                goalEffectEnabled = false
                isFlashing = false
                sim.setShapeColor(goalHandle, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})
            end
        end
    end
end

function sysCall_cleanup()
    sim.setShapeColor(goalHandle, nil, sim.colorcomponent_ambient_diffuse,{0, 0, 0})
end</pre>
<p></p>
<h1>連線教學</h1>
<p><img alt="" height="476" src="/images/1.png" width="846"/></p>
<p>進入防火牆進階設定，並且輸入規則。</p>
<p><img alt="" height="476" src="/images/2.png" width="846"/></p>
<p>點選右側的新增規則。</p>
<p><img alt="" height="477" src="/images/3.png" width="848"/></p>
<p></p>
<p></p>
<p>點選連接埠。</p>
<p><img alt="" height="483" src="/images/4.png" width="859"/></p>
<p>選擇特定連接埠，打23000-23050。</p>
<p><img alt="" height="483" src="/images/5.png" width="859"/></p>
<p>直接點選下一步。</p>
<p><img alt="" height="482" src="/images/6.png" width="857"/></p>
<p><span>直接點選下一步。</span></p>
<p><span><img alt="" height="482" src="/images/7.png" width="857"/></span></p>
<p>輸入名稱就完成了!!</p>
<p>辦法二</p>
<p>在白框輸入</p>
<p>echo off<br/>netsh advirewall firewall add rule name="allow_23000-23050" dir=in action=allow protocol=TCP localport=23000-23050</p>
<p>然後再language上按batch存檔完(名稱後加.bat)，在按使用者開啟</p>
<p><a href="/downloads/allow 23000-23050.zip">allow 23000-23050</a></p>
<h1>對戰影片</h1>
<p>因為組員1 場景無法正常開啟，所以改用組員2的IP來模擬</p>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/R8D1e-wIYhQ" title="YouTube video player" width="560"></iframe></p><h1>分組報告</h1>
<p><a href="https://github.com/mdecd2023/2b3-pj3bg5/releases">pj3bg5分組報告</a></p>
<p></p>